digraph "DD" {
size = "7.5,10"
center = true;
edge [dir = none];
{ node [shape = plaintext];
  edge [style = invis];
  "CONST NODES" [style = invis];
" cur_state[8] " -> " cur_state[9] " -> " cur_state[10] " -> " cur_state[4] " -> " cur_state[0] " -> " cur_state[3] " -> " txtimeout " -> " lk_txfsmidle " -> " tptx_reset " -> " cur_state[11] " -> " cur_state[12] " -> " cur_state[14] " -> " cur_state[13] " -> " cur_state[7] " -> " cur_state[1] " -> " cur_state[2] " -> "CONST NODES"; 
}
{ rank = same; node [shape = box]; edge [style = invis];
"  next_state[13]  "; }
{ rank = same; " cur_state[8] ";
"0x598f";
}
{ rank = same; " cur_state[9] ";
"0x58ee";
}
{ rank = same; " cur_state[10] ";
"0x59b8";
}
{ rank = same; " cur_state[4] ";
"0x57ca";
"0x5977";
}
{ rank = same; " cur_state[0] ";
"0x5982";
"0x564b";
"0x5710";
}
{ rank = same; " cur_state[3] ";
"0x59c9";
"0x59a9";
}
{ rank = same; " txtimeout ";
"0x56f7";
"0x5991";
"0x4a73";
}
{ rank = same; " lk_txfsmidle ";
"0x59f4";
"0x5a7c";
"0x4b96";
}
{ rank = same; " tptx_reset ";
"0x55fa";
"0x4922";
"0x5996";
}
{ rank = same; " cur_state[11] ";
"0x5870";
}
{ rank = same; " cur_state[12] ";
"0x572d";
}
{ rank = same; " cur_state[14] ";
"0x4a8d";
}
{ rank = same; " cur_state[13] ";
"0x5afa";
}
{ rank = same; " cur_state[7] ";
"0x4a97";
}
{ rank = same; " cur_state[1] ";
"0x4954";
}
{ rank = same; " cur_state[2] ";
"0x4933";
}
{ rank = same; "CONST NODES";
{ node [shape = box]; "0x4917";
}
}
"  next_state[13]  " -> "0x598f" [style = dotted];
"0x598f" -> "0x5977";
"0x598f" -> "0x58ee" [style = dashed];
"0x58ee" -> "0x57ca";
"0x58ee" -> "0x59b8" [style = dashed];
"0x59b8" -> "0x57ca";
"0x59b8" -> "0x5977" [style = dashed];
"0x57ca" -> "0x5982";
"0x57ca" -> "0x564b" [style = dashed];
"0x5977" -> "0x5710";
"0x5977" -> "0x564b" [style = dashed];
"0x5982" -> "0x56f7";
"0x5982" -> "0x59c9" [style = dashed];
"0x564b" -> "0x56f7";
"0x564b" -> "0x5991" [style = dashed];
"0x5710" -> "0x56f7";
"0x5710" -> "0x59a9" [style = dashed];
"0x59c9" -> "0x5991";
"0x59c9" -> "0x56f7" [style = dashed];
"0x59a9" -> "0x5991";
"0x59a9" -> "0x4a73" [style = dashed];
"0x56f7" -> "0x4917";
"0x56f7" -> "0x5a7c" [style = dashed];
"0x5991" -> "0x4917";
"0x5991" -> "0x4b96" [style = dashed];
"0x4a73" -> "0x4917";
"0x4a73" -> "0x59f4" [style = dashed];
"0x59f4" -> "0x4917";
"0x59f4" -> "0x5996" [style = dashed];
"0x5a7c" -> "0x4917";
"0x5a7c" -> "0x4922" [style = dashed];
"0x4b96" -> "0x4917";
"0x4b96" -> "0x55fa" [style = dashed];
"0x55fa" -> "0x4917";
"0x55fa" -> "0x4954" [style = dashed];
"0x4922" -> "0x4917";
"0x4922" -> "0x4917" [style = dotted];
"0x5996" -> "0x4917";
"0x5996" -> "0x5870" [style = dotted];
"0x5870" -> "0x4917";
"0x5870" -> "0x572d" [style = dashed];
"0x572d" -> "0x4a97";
"0x572d" -> "0x4a8d" [style = dashed];
"0x4a8d" -> "0x4917";
"0x4a8d" -> "0x5afa" [style = dashed];
"0x5afa" -> "0x4917";
"0x5afa" -> "0x4a97" [style = dashed];
"0x4a97" -> "0x4917";
"0x4a97" -> "0x4954" [style = dotted];
"0x4954" -> "0x4917";
"0x4954" -> "0x4933" [style = dashed];
"0x4933" -> "0x4917";
"0x4933" -> "0x4917" [style = dotted];
"0x4917" [label = "1"];
}
